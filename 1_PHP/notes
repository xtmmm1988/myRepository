                  day01
一PHP基础
 1.PHP，WEB程序开发语言，服务器端的脚本语言
 2.PHP好处
   (1)PHP代码开源
   (2)支持多种WEB服务器(apache,IIS,Nginx 等 )
   (3)支持多种平台(windows,Linux)
  （4）支持多种数据库(MySQL,SQLServer,Oracle等)
 3.安装PHP环境
   (1) WEB服务器（apache）
  （2）PHP引擎
原理:如果客户端请求的页面是.php页面，而WEB服务器不能解析动态页面，必须请PHP引擎帮忙将.php页面执行的静态结果返回给WEB服务器，
    WEB服务器将静 态结果返回给客户端浏览器。
  4.PHP语法结构
   (1)XML风格(标准格式)
   <?php
      ...
   ?>
   说明:如果PHP代码在文档最后结束符 '?>'可以省略(推荐省略)
   (2)短风格
   <?
     ...
   ?>
   说明:
    更改php.ini配置文件中
    short_open_tag=Off
    改为On,重启apache服务器
    才能生效
    (Linux下操作步骤:
      (a) su root
       密码: ycty2016
     （b） 编辑php.ini配置文件
       vi /etc/php.ini
     （c）
        命令搜索模式
         搜索: /关键字
         往下搜索:n
        编辑模式 i
      （d）回到命令搜索模式 esc
         :wq 保存并退出
       (e)重启apache服务器
        service httpd stop
        service httpd start
        service httpd restart 重启
    )
   （3）asp风格
    <%
      ...
    %>
   说明:更改php.ini配置文件中asp_tags=Off改为On,重启apache服务器
    才能生效
    
  (4) script风格
   <script language="php">
     ...
   </script>
   
  5.PHP文档结构(PHP+HTML)
    （1）PHP代码
     (2)XHTML 
     (3)CSS
    （4）Javascript
   说明:PHP文档结构可以有多个PHP语法结构，并且PHP语法结构可以放到
       任意位置中，每句PHP代码用分号结束。
       
   6.变量(Variable)
    1.变量：在内存中有名称的信息，其值可以在程序运行中改变。
    2.声明变量
     $变量名称;
     $变量名称 = 值;
    3.变量名称命名规定
      (1)$开始，变量名称以字母或下划线开头，后面包含数字，字母，下划线
      (2)变量名称禁止包含空格,斜扛，反斜扛
         等特殊符号
      (3)变量名称尽量含有明确
      (4)变量名称尽量使用驼峰风格
         例如: $userName $UserName
     （5）变量名称区分大小写
     说明:如果相同变量名称重复，后面的值
         覆盖前面的值
   7.数据类型(8主要数据类型和4伪类型)
     7.1 8主要数据类型
      （1）标量数据类型(存储单一值)
          a.整型(Integer Int)
          b.浮点型(Float Double)
          c.布尔类型(Boolean Bool)
          d.字符类型(String)
       (2)复合数据类型(存储多个值)
          a.数组(Array)
          b.对象(Object)
       (3)特殊数据类型
          a.资源(Resource)
          b.NULL
      7.2 整型(Integer Int)
         (1)十进制   
         (2)二进制 0b
         (3)八进制 0
         (4)十六进制 0x  
       说明:整型大小受操作系统影响可以PHP_INT_MAX查看最大值
          如果变量值超出整型最大值会溢出 
      7.3 浮点型(Float Double)
        (1)科学计数法 e E
           2e3 = 2*10^3 =2000
           2e-3 = 2/10^3 = 0.002 
       （2）浮点型大小受操作系统影响
           1.8e308
       （3）浮点型在PHP中存近似值
           所有不要对浮点型进行比较
      7.4布尔类型(Boolean Bool)
        说明:只有两个值  true TRUE真，
            false FALSE 假
      7.5字符类型(String):字符必须用定界符括起来
        (1)定界符
           a.单引号(推荐)
           b.双引号
           c.HereDOC（自定义定界符）
           d.NowDOC（自定义定界符）
        (2)单引号和双引号区别
           a.双引号能解析变量而单引号不能解析变量
           b.双引号能解析所有转义字符，而单引号只能解析 \' 和 \\
        （3）转义字符 （标记中的源代码中）
          \\ 反斜扛
          \' 单引号
          \" 双引号
          \r 回车
          \n 换行
          \t 水平制表符
          \v 垂直制表符
         (4)单引号和双引号在HTML实体和转义
           字符的使用
           说明:
            a.W3C规定在浏览器中看到的特殊符号必须用HTML实体实现，那在PHP中
             也必须用HTML实体输出
            b. 在浏览器中源代码中单引号和双引号，在PHP中用转义字符实现
         
        (5) {}的使用
          原理:双引号输出变量，PHP引擎能解析双引号中的变量，会尽可能多的将有效
             字符串作为变量名称，如果要告诉PHP引擎到此为止要用{}将变量名称括起来
           说明:
             a.用{}可以对变量中的获得一个字符或修改一个字符,编号从0开始
             b.当编号大于字符串长度，用一个空格填补 
        (6)HereDOC（自定义定界符）
          $变量名称=<<<定界符名称
            ...
定界符名称
        说明:
        a.当出现大段代码例如大段的xhtml，用HereDOC
        b.结束定界符名称 一定要在行首，不能有空格
        c.HereDOC 能解析变量和转义字符
     (7)NowDOC（自定义定界符）
          $变量名称=<<<'定界符名称'
            ...
定界符名称
        说明:
        a.当出现大段代码例如大段的xhtml，用NowDOC
        b.结束定界符名称 一定要在行首，不能有空格
        c.NowDOC 不能解析变量和转义字符
 =======================================
 (1)echo ：向浏览器中输出一个或多个字符串
 
 echo '字符串';
 echo '字符串','字符串'...;
 echo('字符串');只能输出一个字符串
 （2）解决PHP中文乱码
  header('Content-Type:text/html;charset=utf-8');
  说明:header()前面不能有其他输出
  
 (3) var_dump ：打印输出变量的详细信息
   
   var_dump($var);
   var_dump($var1,$var2,...); 
   
 (4)PHP的报错
   a. Parse error 解析错误
   b. Warning 警告错误
   c. Notice 通知错误
   d. Fatal  致命错误
   
   说明:php.ini配置文件
   a. display_error =Off
     改为 On 重起apache服务器
   b. error_reporting=E_ALL（推荐）
      error_reporting= E_ALL&~E_Notice
               （显示所有错误除了通知错误）
                      day02
二.数据类型（8个主要数据类型和4个伪类型）
  1.8个主要数据类型
    (1)标量数据类型(存单一值)
        a.整型(Integer Int)
        b.浮点(Float Double)
        c.布尔型(Boolean Bool)
        d.字符类型(String)
   （2）复合数据类型(存多个值)
        a.数组(Array)
        b.对象(Object)
   （3）特殊数据类型
         a.资源(Resource)
         b.NULL
   2.数组(Array) 
   3.对象(Object) 
   4.资源(Resource):操作磁盘中或网络中的文件 资源不能声明，用函数实现，
            例如:文件函数和文件夹，GD库函数，MySQL数据库函数等          
   5.NULL
      声明NULL的方式
      (1）声明变量但没有赋值
      (2) 声明变量赋null或NULL值(推荐)
      (3) unset()删除变量的值
      
三.数据类型转换
   PHP是弱语言，会根据程序运行环境自动转换 
   1.自动转换(隐式转换)
     (1)自动转换为数值类型(整型和浮点型)
        a.合法数字字符串，除了 . e E
          并且没有超出整型最大范围转为整型，否则
          转为浮点型
        b.不合法数字字符串(包含字母)，如果以数值开头
          转为改数值，如果以字母开头转为0
        c.布尔值转为数值类型，true 转 1，false转0
        d. null 转为数值类型 0
        e.空字符串 转为数值类型 0
     (2)自动转换为字符类型
        a.整型和浮点型转为字符型改数值本身
        b.布尔值转为字符类型 true转为值'1'
          false 空字符串
        c.null转为字符型 空字符串
        d.数组转为字符型 Array字符串
        e.资源转为字符型 Resource id #数字 字符串 
     (3)自动转换为布尔类型
        转为false的情况如下:
          a.布尔值false
          b.空字符串转为布尔型false
          c.null转为布尔型false
          d.整型0，浮点型0.0，字符串'0'"0"
             转为布尔型false
          e.没有成员的数组(空数组)转为布尔型false
        其他情况都转为true;
   2.强制转换(显式转换)
     (1)临时转换(变量本身不变)
        a. (integer)$var|(int)$var 整型
        b. (float)$var|(double)$var|
            (real)$var 浮点
        c. （boolean）$var|(bool)$var
        d. （string）$var
        e. （array）$var
        f. （object）$var
     (2)永久转换(变量本身变了)			   
        a.settype：设置变量类型
           格式:
           bool settype(mixed $var,string $type)
           说明:成功返回true ,失败返回false
           $type 的值
            (1)boolean |bool PHP4.2以上版本
            (2)integer|int PHP4.2以上版本
           （3）float PHP4.2以上版本|double 停用
            (4)string
           （5）array
           （6）object
           （7）null PHP4.2以上版本
        b.gettype:获得变量类型
           格式: string gettype(mixed $var)
           
四.函数
  1.函数:封装的，可以重复使用完成特定功能的代码段
  2.分类
    （1）系统函数 
     (2)自定义函数 
  3.系统函数的使用
   (1)格式 
   返回值  函数名称([数据类型 参数[,数据类型
          参数[,...]]])
   说明:
     a.[]代表参数可以省略
     b.参数是程序员跟程序沟通的媒介
     c.参数至少有0 (可以是0，也可以是1，还可以多个)
     d.返回值是程序的执行结果
     e.返回值只能有0个或1个
     f.返回值和参数没有必然联系
    (2)函数调用
      函数名称([参数[,参数[,...]]])
      
五.4个伪类型
   1.mixed:混合类型，任意数据类型，不一定是
            所有数据类型
   2.number:数值类型，包含整型和浮点类型
      number pow(number $base,number $exp)
   3.void：空类型
      说明:如果void在返回值上代表没返回值
           如果void在参数上代表没参数
      例如: void echo(string $arg
                [,string $arg[,...]])
   4.callback: 一个函数作为另一个函数的
               参数使用
  
 六.类型判别函数库(系统函数)
    1.安装:类型判别函数库是PHPCORE 组成部分
           不用安装 
    2.
      (1) is_int |is_integer|is_long
        判断变量是否是整型
        格式 bool is_int( mixed $var)
      (2) is_float |is_double|is_real
        判断变量是否是浮点型 
      (3) is_bool
        判断变量是否是布尔值 
      (4) is_string
        判断变量是否是字符型
      (5) is_array  
        判断变量是否是数组
      (6）is_object
        判断变量是否是对象 
      (7) is_resource
        判断变量是否是资源  
      (8) is_null 
        判断变量是否是null 值 
      (9) is_numeric
        判断变量是否是数值型
        或是合法的数字字符串
      (10)is_scalar
        判断变量是否是标量类型(标量类型
        整型，浮点型，布尔，字符型)
        
 七.运算符(Operator)
   1.运算符:程序中执行的运算，必须有一个
           以上的操作数参加运算
           表达式:由运算符和操作数组成
        
   2.运算符分类
     (1)按功能分
     (2)参加运算的操作数个数分
   
   3.按功能分
     (1)算术运算符: （+）正号 (-)负号
                    + - * / %(求余数)
                    ++(自增) --(自减)
       说明:
         a.算术运算符结果是数值类型
         b.算术运算符运算之前，将操
           作数转为数值类型
         c.求余数(模)运算之前，将操
           作数下向取整，求整数的余数
         d.求余数(模)运算的符号与被除
           数一致
         e.求浮点的余数 fmod函数
       ++(自增 ++$var $var++)
       --(自减 --$var $var--)
       说明:
         a.前缀形式，先变量自加或自减1，后执行
         b.后缀形式，先执行，后变量自加或自减1
         c.数值类型支持自增和自减
         d.布尔不支持自增和自减
         e.null支持自增不支持自减
         f.字符类型支持自增不支持自减
     (2)字符(连接)运算符
     (3)赋值运算符
     (4)比较运算符
     (5)逻辑运算符
     (6)错误抑制符
     (7)执行运算符
   
   
 
 
 
 
 
 
 
  
   
   
   
   
   
   
   
   
   
   
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    
    